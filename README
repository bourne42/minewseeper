Creating an always solvable minesweeper - project for parallel computing class
Uses CUDA to run on the GPU. 

Often when playing minesweeper you get stuck, there will be literally no way to determine another cell to uncover. Unfortunately detecting this situation can be an NP hard problem (each possible grid space could be a mine or not, you have to check every option to determine if there is a solution). In order to solve this problem I use the graphics card to brute force test each possible solution and determine if there are any future moves for the given grid. 

Right now all it does when there are no moves is reveal new tiles until there are.

No GUI, just text

To use:
Auguents: -h height : height of the grid
-w width : width of the grid
-b number_of_bombs : number of bombs in the grid
-t : flag; display run times for various parts of the algorithm
-k : flag; display known grid
-d : flag; display debug grids

To play enter in grid coordinate : x y
To flag a grid enter : x y f
